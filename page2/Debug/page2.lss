
page2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000060  00800060  000008f0  00000984  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  008000c0  008000c0  000009e4  2**0
                  ALLOC
  3 .stab         0000078c  00000000  00000000  000009e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000e8  00000000  00000000  00001170  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00001258  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ee9  00000000  00000000  000012d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000220  00000000  00000000  000021c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000644  00000000  00000000  000023e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b8  00000000  00000000  00002a28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000136  00000000  00000000  00002ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ae5  00000000  00000000  00002c16  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 3c       	cpi	r26, 0xC0	; 192
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 ec       	ldi	r26, 0xC0	; 192
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 3c       	cpi	r26, 0xCC	; 204
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  8a:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <display>:
}

//display function of LCD
void display()
{
	PORTA=0B00000101;
  92:	85 e0       	ldi	r24, 0x05	; 5
  94:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	90 e7       	ldi	r25, 0x70	; 112
  9a:	a2 e0       	ldi	r26, 0x02	; 2
  9c:	81 50       	subi	r24, 0x01	; 1
  9e:	90 40       	sbci	r25, 0x00	; 0
  a0:	a0 40       	sbci	r26, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <display+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <display+0x14>
  a6:	00 00       	nop
	_delay_ms(800);
	PORTA=0B00000001;
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	8b bb       	out	0x1b, r24	; 27
}
  ac:	08 95       	ret

000000ae <lcdstring>:
#include <avr/io.h>
#include<util/delay.h>

//functions 
void lcdstring( char *p)
{
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	ec 01       	movw	r28, r24
	while(*p)
  b4:	88 81       	ld	r24, Y
  b6:	88 23       	and	r24, r24
  b8:	39 f0       	breq	.+14     	; 0xc8 <lcdstring+0x1a>

#include <avr/io.h>
#include<util/delay.h>

//functions 
void lcdstring( char *p)
  ba:	21 96       	adiw	r28, 0x01	; 1
{
	while(*p)
	{
		PORTB=(*p);
  bc:	88 bb       	out	0x18, r24	; 24
		display();
  be:	0e 94 49 00 	call	0x92	; 0x92 <display>
#include<util/delay.h>

//functions 
void lcdstring( char *p)
{
	while(*p)
  c2:	89 91       	ld	r24, Y+
  c4:	88 23       	and	r24, r24
  c6:	d1 f7       	brne	.-12     	; 0xbc <lcdstring+0xe>
		PORTB=(*p);
		display();
		p++;

	}
}
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	08 95       	ret

000000ce <cmd>:

//command function of LCD
void cmd()
{
	PORTA=0B00000100;
  ce:	84 e0       	ldi	r24, 0x04	; 4
  d0:	8b bb       	out	0x1b, r24	; 27
  d2:	8f e4       	ldi	r24, 0x4F	; 79
  d4:	93 ec       	ldi	r25, 0xC3	; 195
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <cmd+0x8>
  da:	00 c0       	rjmp	.+0      	; 0xdc <cmd+0xe>
  dc:	00 00       	nop
	_delay_ms(200);
	PORTA=0B00000000;
  de:	1b ba       	out	0x1b, r1	; 27
}
  e0:	08 95       	ret

000000e2 <main>:
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
{
  e2:	3f 92       	push	r3
  e4:	4f 92       	push	r4
  e6:	5f 92       	push	r5
  e8:	6f 92       	push	r6
  ea:	7f 92       	push	r7
  ec:	8f 92       	push	r8
  ee:	9f 92       	push	r9
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
	int i,j,k=0,l=0;
	//PORTA & PORTB made output ports
	//PORTC is made the imput port
	DDRB=0xff;
 104:	8f ef       	ldi	r24, 0xFF	; 255
 106:	87 bb       	out	0x17, r24	; 23
	DDRA=0xff;
 108:	8a bb       	out	0x1a, r24	; 26
	DDRC=0x00;
 10a:	14 ba       	out	0x14, r1	; 20
 10c:	cb eb       	ldi	r28, 0xBB	; 187
 10e:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 110:	8e 01       	movw	r16, r28
 112:	0b 5f       	subi	r16, 0xFB	; 251
 114:	1f 4f       	sbci	r17, 0xFF	; 255
	
	
    //to send commands to the LCD
	for(i=0;i<=4;i++)
    { 
		PORTB=arr1[i];
 116:	89 91       	ld	r24, Y+
 118:	88 bb       	out	0x18, r24	; 24
		cmd();
 11a:	0e 94 67 00 	call	0xce	; 0xce <cmd>
	DDRA=0xff;
	DDRC=0x00;
	
	
    //to send commands to the LCD
	for(i=0;i<=4;i++)
 11e:	c0 17       	cp	r28, r16
 120:	d1 07       	cpc	r29, r17
 122:	c9 f7       	brne	.-14     	; 0x116 <main+0x34>
 124:	18 c0       	rjmp	.+48     	; 0x156 <main+0x74>
	
	for(j=0;j<1;j++)
	{
		for(i=0;i<=13;i++)
		 {
		PORTB=ar5[i];
 126:	89 91       	ld	r24, Y+
 128:	88 bb       	out	0x18, r24	; 24
		display();
 12a:	0e 94 49 00 	call	0x92	; 0x92 <display>
		cmd();
    }
	
	for(j=0;j<1;j++)
	{
		for(i=0;i<=13;i++)
 12e:	c0 17       	cp	r28, r16
 130:	d1 07       	cpc	r29, r17
 132:	c9 f7       	brne	.-14     	; 0x126 <main+0x44>
		 {
		PORTB=ar5[i];
		display();
		 }
	PORTB=0xc0;
 134:	80 ec       	ldi	r24, 0xC0	; 192
 136:	88 bb       	out	0x18, r24	; 24
	cmd();
 138:	0e 94 67 00 	call	0xce	; 0xce <cmd>
 13c:	c7 e8       	ldi	r28, 0x87	; 135
 13e:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 140:	8e 01       	movw	r16, r28
 142:	00 5f       	subi	r16, 0xF0	; 240
 144:	1f 4f       	sbci	r17, 0xFF	; 255
	PORTB=0xc0;
	cmd();
	
		for(i=0;i<=15;i++)
		 {
		 PORTB=arr5[i];
 146:	89 91       	ld	r24, Y+
 148:	88 bb       	out	0x18, r24	; 24
		 display();
 14a:	0e 94 49 00 	call	0x92	; 0x92 <display>
		display();
		 }
	PORTB=0xc0;
	cmd();
	
		for(i=0;i<=15;i++)
 14e:	c0 17       	cp	r28, r16
 150:	d1 07       	cpc	r29, r17
 152:	c9 f7       	brne	.-14     	; 0x146 <main+0x64>
 154:	06 c0       	rjmp	.+12     	; 0x162 <main+0x80>
 156:	c8 e9       	ldi	r28, 0x98	; 152
 158:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 15a:	8e 01       	movw	r16, r28
 15c:	02 5f       	subi	r16, 0xF2	; 242
 15e:	1f 4f       	sbci	r17, 0xFF	; 255
 160:	e2 cf       	rjmp	.-60     	; 0x126 <main+0x44>
 162:	8f e7       	ldi	r24, 0x7F	; 127
 164:	9a e1       	ldi	r25, 0x1A	; 26
 166:	a6 e0       	ldi	r26, 0x06	; 6
 168:	81 50       	subi	r24, 0x01	; 1
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	a0 40       	sbci	r26, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0x86>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0x90>
 172:	00 00       	nop
		 display();
		 }
	}	 
	
	_delay_ms(2000);
	PORTB=0x01;
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	88 bb       	out	0x18, r24	; 24
	cmd();
 178:	0e 94 67 00 	call	0xce	; 0xce <cmd>
 17c:	cd ea       	ldi	r28, 0xAD	; 173
 17e:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 180:	8e 01       	movw	r16, r28
 182:	02 5f       	subi	r16, 0xF2	; 242
 184:	1f 4f       	sbci	r17, 0xFF	; 255
	cmd();
	
	//to display text on the LCD
	 for(i=0;i<=13;i++)
	 {
		 PORTB=arr2[i];
 186:	89 91       	ld	r24, Y+
 188:	88 bb       	out	0x18, r24	; 24
		 display();
 18a:	0e 94 49 00 	call	0x92	; 0x92 <display>
	_delay_ms(2000);
	PORTB=0x01;
	cmd();
	
	//to display text on the LCD
	 for(i=0;i<=13;i++)
 18e:	c0 17       	cp	r28, r16
 190:	d1 07       	cpc	r29, r17
 192:	c9 f7       	brne	.-14     	; 0x186 <main+0xa4>
	 {
		 PORTB=arr2[i];
		 display();
	 }
	 
	 PORTB=0xc0;
 194:	80 ec       	ldi	r24, 0xC0	; 192
 196:	88 bb       	out	0x18, r24	; 24
	 cmd();
 198:	0e 94 67 00 	call	0xce	; 0xce <cmd>
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	99 e6       	ldi	r25, 0x69	; 105
 1a0:	a8 e1       	ldi	r26, 0x18	; 24
 1a2:	81 50       	subi	r24, 0x01	; 1
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	a0 40       	sbci	r26, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0xc0>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0xca>
 1ac:	00 00       	nop
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
{
	int i,j,k=0,l=0;
 1ae:	c0 e0       	ldi	r28, 0x00	; 0
 1b0:	d0 e0       	ldi	r29, 0x00	; 0
	 _delay_ms(8000);
	 //to enter characters from the keypad
	 
	 while(k<=4)
	 {
		if (PINC=0x01)
 1b2:	dd 24       	eor	r13, r13
 1b4:	d3 94       	inc	r13
		{
	 if(PINC & 0X10)
	 {
		 PORTB='A';
 1b6:	0f 2e       	mov	r0, r31
 1b8:	f1 e4       	ldi	r31, 0x41	; 65
 1ba:	af 2e       	mov	r10, r31
 1bc:	f0 2d       	mov	r31, r0
		 e[k]=PORTB;
 1be:	00 ec       	ldi	r16, 0xC0	; 192
 1c0:	10 e0       	ldi	r17, 0x00	; 0
		 _delay_ms(500);
		 //to display characters as asterisks
		 lcdstring("*");
 1c2:	0f 2e       	mov	r0, r31
 1c4:	f0 e6       	ldi	r31, 0x60	; 96
 1c6:	ef 2e       	mov	r14, r31
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	ff 2e       	mov	r15, r31
 1cc:	f0 2d       	mov	r31, r0
		 k++;
	 }
	 		 
      if(PINC & 0X20)
	 	 {
		  PORTB='B';
 1ce:	0f 2e       	mov	r0, r31
 1d0:	f2 e4       	ldi	r31, 0x42	; 66
 1d2:	9f 2e       	mov	r9, r31
 1d4:	f0 2d       	mov	r31, r0
		  lcdstring("*");
		   k++;
		  }
	 if(PINC & 0X40)
 	 {
	 	 PORTB='C';
 1d6:	0f 2e       	mov	r0, r31
 1d8:	f3 e4       	ldi	r31, 0x43	; 67
 1da:	8f 2e       	mov	r8, r31
 1dc:	f0 2d       	mov	r31, r0
		  lcdstring("*");
		   k++;
  }	
   if(PINC & 0X80)
  {
	  PORTB='D';
 1de:	0f 2e       	mov	r0, r31
 1e0:	f4 e4       	ldi	r31, 0x44	; 68
 1e2:	4f 2e       	mov	r4, r31
 1e4:	f0 2d       	mov	r31, r0
	  _delay_ms(500);
	  lcdstring("*");
	   k++;
  }
	  }  
  	if (PINC=0x02)
 1e6:	cc 24       	eor	r12, r12
 1e8:	68 94       	set
 1ea:	c1 f8       	bld	r12, 1
	  {
  	 if(PINC & 0X10)
  	 {
	  	 PORTB='E';
 1ec:	0f 2e       	mov	r0, r31
 1ee:	f5 e4       	ldi	r31, 0x45	; 69
 1f0:	7f 2e       	mov	r7, r31
 1f2:	f0 2d       	mov	r31, r0
	  	k++;
  	 }
  	 
  	 if(PINC & 0X20)
  	 {
	  	 PORTB='F';
 1f4:	0f 2e       	mov	r0, r31
 1f6:	f6 e4       	ldi	r31, 0x46	; 70
 1f8:	6f 2e       	mov	r6, r31
 1fa:	f0 2d       	mov	r31, r0
	  	 lcdstring("*");
	  	 k++;
  	 }
  	 if(PINC & 0X40)
  	 {
	  	 PORTB='G';
 1fc:	0f 2e       	mov	r0, r31
 1fe:	f7 e4       	ldi	r31, 0x47	; 71
 200:	5f 2e       	mov	r5, r31
 202:	f0 2d       	mov	r31, r0
	  	 lcdstring("*");
	  	 k++;
  	 }
  	 if(PINC & 0X80)
  	 {
	  	 PORTB='H';
 204:	0f 2e       	mov	r0, r31
 206:	f8 e4       	ldi	r31, 0x48	; 72
 208:	3f 2e       	mov	r3, r31
 20a:	f0 2d       	mov	r31, r0
	  	 lcdstring("*");
	  	 k++;
  	 }
	  
	  }	  
	   if (PINC=0x04)
 20c:	bb 24       	eor	r11, r11
 20e:	68 94       	set
 210:	b2 f8       	bld	r11, 2
	 _delay_ms(8000);
	 //to enter characters from the keypad
	 
	 while(k<=4)
	 {
		if (PINC=0x01)
 212:	d3 ba       	out	0x13, r13	; 19
		{
	 if(PINC & 0X10)
 214:	9c 9b       	sbis	0x13, 4	; 19
 216:	13 c0       	rjmp	.+38     	; 0x23e <main+0x15c>
	 {
		 PORTB='A';
 218:	a8 ba       	out	0x18, r10	; 24
		 e[k]=PORTB;
 21a:	88 b3       	in	r24, 0x18	; 24
 21c:	f8 01       	movw	r30, r16
 21e:	ec 0f       	add	r30, r28
 220:	fd 1f       	adc	r31, r29
 222:	80 83       	st	Z, r24
 224:	8f e9       	ldi	r24, 0x9F	; 159
 226:	96 e8       	ldi	r25, 0x86	; 134
 228:	a1 e0       	ldi	r26, 0x01	; 1
 22a:	81 50       	subi	r24, 0x01	; 1
 22c:	90 40       	sbci	r25, 0x00	; 0
 22e:	a0 40       	sbci	r26, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <main+0x148>
 232:	00 c0       	rjmp	.+0      	; 0x234 <main+0x152>
 234:	00 00       	nop
		 _delay_ms(500);
		 //to display characters as asterisks
		 lcdstring("*");
 236:	c7 01       	movw	r24, r14
 238:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
		 k++;
 23c:	21 96       	adiw	r28, 0x01	; 1
	 }
	 		 
      if(PINC & 0X20)
 23e:	9d 9b       	sbis	0x13, 5	; 19
 240:	13 c0       	rjmp	.+38     	; 0x268 <main+0x186>
	 	 {
		  PORTB='B';
 242:	98 ba       	out	0x18, r9	; 24
		   e[k]=PORTB;
 244:	88 b3       	in	r24, 0x18	; 24
 246:	f8 01       	movw	r30, r16
 248:	ec 0f       	add	r30, r28
 24a:	fd 1f       	adc	r31, r29
 24c:	80 83       	st	Z, r24
 24e:	8f e9       	ldi	r24, 0x9F	; 159
 250:	96 e8       	ldi	r25, 0x86	; 134
 252:	a1 e0       	ldi	r26, 0x01	; 1
 254:	81 50       	subi	r24, 0x01	; 1
 256:	90 40       	sbci	r25, 0x00	; 0
 258:	a0 40       	sbci	r26, 0x00	; 0
 25a:	e1 f7       	brne	.-8      	; 0x254 <main+0x172>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <main+0x17c>
 25e:	00 00       	nop
		  _delay_ms(500);
		  lcdstring("*");
 260:	c7 01       	movw	r24, r14
 262:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
		   k++;
 266:	21 96       	adiw	r28, 0x01	; 1
		  }
	 if(PINC & 0X40)
 268:	9e 9b       	sbis	0x13, 6	; 19
 26a:	13 c0       	rjmp	.+38     	; 0x292 <main+0x1b0>
 	 {
	 	 PORTB='C';
 26c:	88 ba       	out	0x18, r8	; 24
	 	 e[k]=PORTB;
 26e:	88 b3       	in	r24, 0x18	; 24
 270:	f8 01       	movw	r30, r16
 272:	ec 0f       	add	r30, r28
 274:	fd 1f       	adc	r31, r29
 276:	80 83       	st	Z, r24
 278:	8f e9       	ldi	r24, 0x9F	; 159
 27a:	96 e8       	ldi	r25, 0x86	; 134
 27c:	a1 e0       	ldi	r26, 0x01	; 1
 27e:	81 50       	subi	r24, 0x01	; 1
 280:	90 40       	sbci	r25, 0x00	; 0
 282:	a0 40       	sbci	r26, 0x00	; 0
 284:	e1 f7       	brne	.-8      	; 0x27e <main+0x19c>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x1a6>
 288:	00 00       	nop
		  _delay_ms(500);
		  lcdstring("*");
 28a:	c7 01       	movw	r24, r14
 28c:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
		   k++;
 290:	21 96       	adiw	r28, 0x01	; 1
  }	
   if(PINC & 0X80)
 292:	9f 9b       	sbis	0x13, 7	; 19
 294:	13 c0       	rjmp	.+38     	; 0x2bc <main+0x1da>
  {
	  PORTB='D';
 296:	48 ba       	out	0x18, r4	; 24
	   e[k]=PORTB;
 298:	88 b3       	in	r24, 0x18	; 24
 29a:	f8 01       	movw	r30, r16
 29c:	ec 0f       	add	r30, r28
 29e:	fd 1f       	adc	r31, r29
 2a0:	80 83       	st	Z, r24
 2a2:	8f e9       	ldi	r24, 0x9F	; 159
 2a4:	96 e8       	ldi	r25, 0x86	; 134
 2a6:	a1 e0       	ldi	r26, 0x01	; 1
 2a8:	81 50       	subi	r24, 0x01	; 1
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	a0 40       	sbci	r26, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x1c6>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x1d0>
 2b2:	00 00       	nop
	  _delay_ms(500);
	  lcdstring("*");
 2b4:	c7 01       	movw	r24, r14
 2b6:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
	   k++;
 2ba:	21 96       	adiw	r28, 0x01	; 1
  }
	  }  
  	if (PINC=0x02)
 2bc:	c3 ba       	out	0x13, r12	; 19
	  {
  	 if(PINC & 0X10)
 2be:	9c 9b       	sbis	0x13, 4	; 19
 2c0:	13 c0       	rjmp	.+38     	; 0x2e8 <main+0x206>
  	 {
	  	 PORTB='E';
 2c2:	78 ba       	out	0x18, r7	; 24
	  	e[k]=PORTB;
 2c4:	88 b3       	in	r24, 0x18	; 24
 2c6:	f8 01       	movw	r30, r16
 2c8:	ec 0f       	add	r30, r28
 2ca:	fd 1f       	adc	r31, r29
 2cc:	80 83       	st	Z, r24
 2ce:	8f e9       	ldi	r24, 0x9F	; 159
 2d0:	96 e8       	ldi	r25, 0x86	; 134
 2d2:	a1 e0       	ldi	r26, 0x01	; 1
 2d4:	81 50       	subi	r24, 0x01	; 1
 2d6:	90 40       	sbci	r25, 0x00	; 0
 2d8:	a0 40       	sbci	r26, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <main+0x1f2>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <main+0x1fc>
 2de:	00 00       	nop
	  	_delay_ms(500);
	  	lcdstring("*");
 2e0:	c7 01       	movw	r24, r14
 2e2:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
	  	k++;
 2e6:	21 96       	adiw	r28, 0x01	; 1
  	 }
  	 
  	 if(PINC & 0X20)
 2e8:	9d 9b       	sbis	0x13, 5	; 19
 2ea:	13 c0       	rjmp	.+38     	; 0x312 <main+0x230>
  	 {
	  	 PORTB='F';
 2ec:	68 ba       	out	0x18, r6	; 24
	  	 e[k]=PORTB;
 2ee:	88 b3       	in	r24, 0x18	; 24
 2f0:	f8 01       	movw	r30, r16
 2f2:	ec 0f       	add	r30, r28
 2f4:	fd 1f       	adc	r31, r29
 2f6:	80 83       	st	Z, r24
 2f8:	8f e9       	ldi	r24, 0x9F	; 159
 2fa:	96 e8       	ldi	r25, 0x86	; 134
 2fc:	a1 e0       	ldi	r26, 0x01	; 1
 2fe:	81 50       	subi	r24, 0x01	; 1
 300:	90 40       	sbci	r25, 0x00	; 0
 302:	a0 40       	sbci	r26, 0x00	; 0
 304:	e1 f7       	brne	.-8      	; 0x2fe <main+0x21c>
 306:	00 c0       	rjmp	.+0      	; 0x308 <main+0x226>
 308:	00 00       	nop
	  	 _delay_ms(500);
	  	 lcdstring("*");
 30a:	c7 01       	movw	r24, r14
 30c:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
	  	 k++;
 310:	21 96       	adiw	r28, 0x01	; 1
  	 }
  	 if(PINC & 0X40)
 312:	9e 9b       	sbis	0x13, 6	; 19
 314:	13 c0       	rjmp	.+38     	; 0x33c <main+0x25a>
  	 {
	  	 PORTB='G';
 316:	58 ba       	out	0x18, r5	; 24
	  	 e[k]=PORTB;
 318:	88 b3       	in	r24, 0x18	; 24
 31a:	f8 01       	movw	r30, r16
 31c:	ec 0f       	add	r30, r28
 31e:	fd 1f       	adc	r31, r29
 320:	80 83       	st	Z, r24
 322:	8f e9       	ldi	r24, 0x9F	; 159
 324:	96 e8       	ldi	r25, 0x86	; 134
 326:	a1 e0       	ldi	r26, 0x01	; 1
 328:	81 50       	subi	r24, 0x01	; 1
 32a:	90 40       	sbci	r25, 0x00	; 0
 32c:	a0 40       	sbci	r26, 0x00	; 0
 32e:	e1 f7       	brne	.-8      	; 0x328 <main+0x246>
 330:	00 c0       	rjmp	.+0      	; 0x332 <main+0x250>
 332:	00 00       	nop
	  	 _delay_ms(500);
	  	 lcdstring("*");
 334:	c7 01       	movw	r24, r14
 336:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
	  	 k++;
 33a:	21 96       	adiw	r28, 0x01	; 1
  	 }
  	 if(PINC & 0X80)
 33c:	9f 9b       	sbis	0x13, 7	; 19
 33e:	13 c0       	rjmp	.+38     	; 0x366 <main+0x284>
  	 {
	  	 PORTB='H';
 340:	38 ba       	out	0x18, r3	; 24
	  	 e[k]=PORTB;
 342:	88 b3       	in	r24, 0x18	; 24
 344:	f8 01       	movw	r30, r16
 346:	ec 0f       	add	r30, r28
 348:	fd 1f       	adc	r31, r29
 34a:	80 83       	st	Z, r24
 34c:	8f e9       	ldi	r24, 0x9F	; 159
 34e:	96 e8       	ldi	r25, 0x86	; 134
 350:	a1 e0       	ldi	r26, 0x01	; 1
 352:	81 50       	subi	r24, 0x01	; 1
 354:	90 40       	sbci	r25, 0x00	; 0
 356:	a0 40       	sbci	r26, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x270>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x27a>
 35c:	00 00       	nop
	  	 _delay_ms(500);
	  	 lcdstring("*");
 35e:	c7 01       	movw	r24, r14
 360:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
	  	 k++;
 364:	21 96       	adiw	r28, 0x01	; 1
  	 }
	  
	  }	  
	   if (PINC=0x04)
 366:	b3 ba       	out	0x13, r11	; 19
	   {
		   if(PINC & 0X10)
 368:	9c 9b       	sbis	0x13, 4	; 19
 36a:	14 c0       	rjmp	.+40     	; 0x394 <main+0x2b2>
		   {
			   PORTB='I';
 36c:	89 e4       	ldi	r24, 0x49	; 73
 36e:	88 bb       	out	0x18, r24	; 24
			  e[k]=PORTB;
 370:	88 b3       	in	r24, 0x18	; 24
 372:	f8 01       	movw	r30, r16
 374:	ec 0f       	add	r30, r28
 376:	fd 1f       	adc	r31, r29
 378:	80 83       	st	Z, r24
 37a:	8f e9       	ldi	r24, 0x9F	; 159
 37c:	96 e8       	ldi	r25, 0x86	; 134
 37e:	a1 e0       	ldi	r26, 0x01	; 1
 380:	81 50       	subi	r24, 0x01	; 1
 382:	90 40       	sbci	r25, 0x00	; 0
 384:	a0 40       	sbci	r26, 0x00	; 0
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0x29e>
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0x2a8>
 38a:	00 00       	nop
			  _delay_ms(500);
			  lcdstring("*");
 38c:	c7 01       	movw	r24, r14
 38e:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
			  k++;
 392:	21 96       	adiw	r28, 0x01	; 1
		   }
		   
		   if(PINC & 0X20)
 394:	9d 9b       	sbis	0x13, 5	; 19
 396:	14 c0       	rjmp	.+40     	; 0x3c0 <main+0x2de>
		   {
			   PORTB='J';
 398:	8a e4       	ldi	r24, 0x4A	; 74
 39a:	88 bb       	out	0x18, r24	; 24
			  e[k]=PORTB;
 39c:	88 b3       	in	r24, 0x18	; 24
 39e:	f8 01       	movw	r30, r16
 3a0:	ec 0f       	add	r30, r28
 3a2:	fd 1f       	adc	r31, r29
 3a4:	80 83       	st	Z, r24
 3a6:	8f e9       	ldi	r24, 0x9F	; 159
 3a8:	96 e8       	ldi	r25, 0x86	; 134
 3aa:	a1 e0       	ldi	r26, 0x01	; 1
 3ac:	81 50       	subi	r24, 0x01	; 1
 3ae:	90 40       	sbci	r25, 0x00	; 0
 3b0:	a0 40       	sbci	r26, 0x00	; 0
 3b2:	e1 f7       	brne	.-8      	; 0x3ac <main+0x2ca>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <main+0x2d4>
 3b6:	00 00       	nop
			  _delay_ms(500);
			  lcdstring("*");
 3b8:	c7 01       	movw	r24, r14
 3ba:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
			  k++;
 3be:	21 96       	adiw	r28, 0x01	; 1
		   }
		   if(PINC & 0X40)
 3c0:	9e 9b       	sbis	0x13, 6	; 19
 3c2:	14 c0       	rjmp	.+40     	; 0x3ec <main+0x30a>
		   {
			   PORTB='K';
 3c4:	8b e4       	ldi	r24, 0x4B	; 75
 3c6:	88 bb       	out	0x18, r24	; 24
			   e[k]=PORTB;
 3c8:	88 b3       	in	r24, 0x18	; 24
 3ca:	f8 01       	movw	r30, r16
 3cc:	ec 0f       	add	r30, r28
 3ce:	fd 1f       	adc	r31, r29
 3d0:	80 83       	st	Z, r24
 3d2:	8f e9       	ldi	r24, 0x9F	; 159
 3d4:	96 e8       	ldi	r25, 0x86	; 134
 3d6:	a1 e0       	ldi	r26, 0x01	; 1
 3d8:	81 50       	subi	r24, 0x01	; 1
 3da:	90 40       	sbci	r25, 0x00	; 0
 3dc:	a0 40       	sbci	r26, 0x00	; 0
 3de:	e1 f7       	brne	.-8      	; 0x3d8 <main+0x2f6>
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <main+0x300>
 3e2:	00 00       	nop
			   _delay_ms(500);
			   lcdstring("*");
 3e4:	c7 01       	movw	r24, r14
 3e6:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
			   k++;
 3ea:	21 96       	adiw	r28, 0x01	; 1
		   }
		   if(PINC & 0X80)
 3ec:	9f 9b       	sbis	0x13, 7	; 19
 3ee:	14 c0       	rjmp	.+40     	; 0x418 <main+0x336>
		   {
			   PORTB='L';
 3f0:	8c e4       	ldi	r24, 0x4C	; 76
 3f2:	88 bb       	out	0x18, r24	; 24
			   e[k]=PORTB;
 3f4:	88 b3       	in	r24, 0x18	; 24
 3f6:	f8 01       	movw	r30, r16
 3f8:	ec 0f       	add	r30, r28
 3fa:	fd 1f       	adc	r31, r29
 3fc:	80 83       	st	Z, r24
 3fe:	8f e9       	ldi	r24, 0x9F	; 159
 400:	96 e8       	ldi	r25, 0x86	; 134
 402:	a1 e0       	ldi	r26, 0x01	; 1
 404:	81 50       	subi	r24, 0x01	; 1
 406:	90 40       	sbci	r25, 0x00	; 0
 408:	a0 40       	sbci	r26, 0x00	; 0
 40a:	e1 f7       	brne	.-8      	; 0x404 <main+0x322>
 40c:	00 c0       	rjmp	.+0      	; 0x40e <main+0x32c>
 40e:	00 00       	nop
			   _delay_ms(500);
			   lcdstring("*");
 410:	c7 01       	movw	r24, r14
 412:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
			   k++;
 416:	21 96       	adiw	r28, 0x01	; 1
		   }
	   }		  
		   if (PINC=0x08)
 418:	88 e0       	ldi	r24, 0x08	; 8
 41a:	83 bb       	out	0x13, r24	; 19
		   {
			   if(PINC & 0X10)
 41c:	9c 9b       	sbis	0x13, 4	; 19
 41e:	14 c0       	rjmp	.+40     	; 0x448 <main+0x366>
			   {
				   PORTB='M';
 420:	8d e4       	ldi	r24, 0x4D	; 77
 422:	88 bb       	out	0x18, r24	; 24
				   e[k]=PORTB;
 424:	88 b3       	in	r24, 0x18	; 24
 426:	f8 01       	movw	r30, r16
 428:	ec 0f       	add	r30, r28
 42a:	fd 1f       	adc	r31, r29
 42c:	80 83       	st	Z, r24
 42e:	8f e9       	ldi	r24, 0x9F	; 159
 430:	96 e8       	ldi	r25, 0x86	; 134
 432:	a1 e0       	ldi	r26, 0x01	; 1
 434:	81 50       	subi	r24, 0x01	; 1
 436:	90 40       	sbci	r25, 0x00	; 0
 438:	a0 40       	sbci	r26, 0x00	; 0
 43a:	e1 f7       	brne	.-8      	; 0x434 <main+0x352>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <main+0x35c>
 43e:	00 00       	nop
				   _delay_ms(500);
				   lcdstring("*");
 440:	c7 01       	movw	r24, r14
 442:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
				   k++;
 446:	21 96       	adiw	r28, 0x01	; 1
			   }
			   
			   if(PINC & 0X20)
 448:	9d 9b       	sbis	0x13, 5	; 19
 44a:	14 c0       	rjmp	.+40     	; 0x474 <__stack+0x15>
			   {
				   PORTB='N';
 44c:	8e e4       	ldi	r24, 0x4E	; 78
 44e:	88 bb       	out	0x18, r24	; 24
				   e[k]=PORTB;
 450:	88 b3       	in	r24, 0x18	; 24
 452:	f8 01       	movw	r30, r16
 454:	ec 0f       	add	r30, r28
 456:	fd 1f       	adc	r31, r29
 458:	80 83       	st	Z, r24
 45a:	8f e9       	ldi	r24, 0x9F	; 159
 45c:	96 e8       	ldi	r25, 0x86	; 134
 45e:	a1 e0       	ldi	r26, 0x01	; 1
 460:	81 50       	subi	r24, 0x01	; 1
 462:	90 40       	sbci	r25, 0x00	; 0
 464:	a0 40       	sbci	r26, 0x00	; 0
 466:	e1 f7       	brne	.-8      	; 0x460 <__stack+0x1>
 468:	00 c0       	rjmp	.+0      	; 0x46a <__stack+0xb>
 46a:	00 00       	nop
				   _delay_ms(500);
				   lcdstring("*");
 46c:	c7 01       	movw	r24, r14
 46e:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
				   k++;
 472:	21 96       	adiw	r28, 0x01	; 1
			   }
			   if(PINC & 0X40)
 474:	9e 9b       	sbis	0x13, 6	; 19
 476:	14 c0       	rjmp	.+40     	; 0x4a0 <__stack+0x41>
			   {
				   PORTB='O';
 478:	8f e4       	ldi	r24, 0x4F	; 79
 47a:	88 bb       	out	0x18, r24	; 24
				   e[k]=PORTB;
 47c:	88 b3       	in	r24, 0x18	; 24
 47e:	f8 01       	movw	r30, r16
 480:	ec 0f       	add	r30, r28
 482:	fd 1f       	adc	r31, r29
 484:	80 83       	st	Z, r24
 486:	8f e9       	ldi	r24, 0x9F	; 159
 488:	96 e8       	ldi	r25, 0x86	; 134
 48a:	a1 e0       	ldi	r26, 0x01	; 1
 48c:	81 50       	subi	r24, 0x01	; 1
 48e:	90 40       	sbci	r25, 0x00	; 0
 490:	a0 40       	sbci	r26, 0x00	; 0
 492:	e1 f7       	brne	.-8      	; 0x48c <__stack+0x2d>
 494:	00 c0       	rjmp	.+0      	; 0x496 <__stack+0x37>
 496:	00 00       	nop
				   _delay_ms(500);
				   lcdstring("*");
 498:	c7 01       	movw	r24, r14
 49a:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
				   k++;
 49e:	21 96       	adiw	r28, 0x01	; 1
			   }
			   if(PINC & 0X80)
 4a0:	9f 9b       	sbis	0x13, 7	; 19
 4a2:	14 c0       	rjmp	.+40     	; 0x4cc <__stack+0x6d>
			   {
				   PORTB='P';
 4a4:	80 e5       	ldi	r24, 0x50	; 80
 4a6:	88 bb       	out	0x18, r24	; 24
				  e[k]=PORTB;
 4a8:	88 b3       	in	r24, 0x18	; 24
 4aa:	f8 01       	movw	r30, r16
 4ac:	ec 0f       	add	r30, r28
 4ae:	fd 1f       	adc	r31, r29
 4b0:	80 83       	st	Z, r24
 4b2:	8f e9       	ldi	r24, 0x9F	; 159
 4b4:	96 e8       	ldi	r25, 0x86	; 134
 4b6:	a1 e0       	ldi	r26, 0x01	; 1
 4b8:	81 50       	subi	r24, 0x01	; 1
 4ba:	90 40       	sbci	r25, 0x00	; 0
 4bc:	a0 40       	sbci	r26, 0x00	; 0
 4be:	e1 f7       	brne	.-8      	; 0x4b8 <__stack+0x59>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <__stack+0x63>
 4c2:	00 00       	nop
				  _delay_ms(500);
				  lcdstring("*");
 4c4:	c7 01       	movw	r24, r14
 4c6:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
				  k++;
 4ca:	21 96       	adiw	r28, 0x01	; 1
				    
			   }
			 e[k]='\0';  
 4cc:	f8 01       	movw	r30, r16
 4ce:	ec 0f       	add	r30, r28
 4d0:	fd 1f       	adc	r31, r29
 4d2:	10 82       	st	Z, r1
	 PORTB=0xc0;
	 cmd();
	 _delay_ms(8000);
	 //to enter characters from the keypad
	 
	 while(k<=4)
 4d4:	c5 30       	cpi	r28, 0x05	; 5
 4d6:	d1 05       	cpc	r29, r1
 4d8:	0c f4       	brge	.+2      	; 0x4dc <__stack+0x7d>
 4da:	9b ce       	rjmp	.-714    	; 0x212 <main+0x130>
 4dc:	8f ef       	ldi	r24, 0xFF	; 255
 4de:	99 e6       	ldi	r25, 0x69	; 105
 4e0:	a8 e1       	ldi	r26, 0x18	; 24
 4e2:	81 50       	subi	r24, 0x01	; 1
 4e4:	90 40       	sbci	r25, 0x00	; 0
 4e6:	a0 40       	sbci	r26, 0x00	; 0
 4e8:	e1 f7       	brne	.-8      	; 0x4e2 <__stack+0x83>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <__stack+0x8d>
 4ec:	00 00       	nop
			   }
			 e[k]='\0';  
		   }	
		   }
		   _delay_ms(8000);
		   PORTB=0x01;
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	88 bb       	out	0x18, r24	; 24
		   cmd();
 4f2:	0e 94 67 00 	call	0xce	; 0xce <cmd>
		   PORTB=0x80;
 4f6:	80 e8       	ldi	r24, 0x80	; 128
 4f8:	88 bb       	out	0x18, r24	; 24
		   cmd();
 4fa:	0e 94 67 00 	call	0xce	; 0xce <cmd>
 4fe:	c2 e6       	ldi	r28, 0x62	; 98
 500:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 502:	8e 01       	movw	r16, r28
 504:	02 5f       	subi	r16, 0xF2	; 242
 506:	1f 4f       	sbci	r17, 0xFF	; 255
		   PORTB=0x80;
		   cmd();
		   
		    for(i=0;i<=13;i++)
		    {
			    PORTB=arr8[i];
 508:	89 91       	ld	r24, Y+
 50a:	88 bb       	out	0x18, r24	; 24
			    display();
 50c:	0e 94 49 00 	call	0x92	; 0x92 <display>
		   PORTB=0x01;
		   cmd();
		   PORTB=0x80;
		   cmd();
		   
		    for(i=0;i<=13;i++)
 510:	c0 17       	cp	r28, r16
 512:	d1 07       	cpc	r29, r17
 514:	c9 f7       	brne	.-14     	; 0x508 <__stack+0xa9>
		    {
			    PORTB=arr8[i];
			    display();
		    }
			  PORTB=0xc0;
 516:	80 ec       	ldi	r24, 0xC0	; 192
 518:	88 bb       	out	0x18, r24	; 24
			  cmd();
 51a:	0e 94 67 00 	call	0xce	; 0xce <cmd>
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
{
	int i,j,k=0,l=0;
 51e:	c0 e0       	ldi	r28, 0x00	; 0
 520:	d0 e0       	ldi	r29, 0x00	; 0
			  cmd();
			
		   
		   while(l<=4)
		   {
			   if (PINC=0x01)
 522:	dd 24       	eor	r13, r13
 524:	d3 94       	inc	r13
			   {
				   if(PINC & 0X10)
				   {
					   PORTB='A';
 526:	0f 2e       	mov	r0, r31
 528:	f1 e4       	ldi	r31, 0x41	; 65
 52a:	af 2e       	mov	r10, r31
 52c:	f0 2d       	mov	r31, r0
					   e1[l]=PORTB;
 52e:	06 ec       	ldi	r16, 0xC6	; 198
 530:	10 e0       	ldi	r17, 0x00	; 0
					   _delay_ms(500);
					   //to display characters as asterisks
					   lcdstring("*");
 532:	0f 2e       	mov	r0, r31
 534:	f0 e6       	ldi	r31, 0x60	; 96
 536:	ef 2e       	mov	r14, r31
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	ff 2e       	mov	r15, r31
 53c:	f0 2d       	mov	r31, r0
					   l++;
				   }
				   
				   if(PINC & 0X20)
				   {
					   PORTB='B';
 53e:	0f 2e       	mov	r0, r31
 540:	f2 e4       	ldi	r31, 0x42	; 66
 542:	9f 2e       	mov	r9, r31
 544:	f0 2d       	mov	r31, r0
					   lcdstring("*");
					   l++;
				   }
				   if(PINC & 0X40)
				   {
					   PORTB='C';
 546:	0f 2e       	mov	r0, r31
 548:	f3 e4       	ldi	r31, 0x43	; 67
 54a:	8f 2e       	mov	r8, r31
 54c:	f0 2d       	mov	r31, r0
					   lcdstring("*");
					   l++;
				   }
				   if(PINC & 0X80)
				   {
					   PORTB='D';
 54e:	0f 2e       	mov	r0, r31
 550:	f4 e4       	ldi	r31, 0x44	; 68
 552:	4f 2e       	mov	r4, r31
 554:	f0 2d       	mov	r31, r0
					   _delay_ms(500);
					   lcdstring("*");
					   l++;
				   }
			   }
			   if (PINC=0x02)
 556:	cc 24       	eor	r12, r12
 558:	68 94       	set
 55a:	c1 f8       	bld	r12, 1
			   {
				   if(PINC & 0X10)
				   {
					   PORTB='E';
 55c:	0f 2e       	mov	r0, r31
 55e:	f5 e4       	ldi	r31, 0x45	; 69
 560:	7f 2e       	mov	r7, r31
 562:	f0 2d       	mov	r31, r0
					   l++;
				   }
				   
				   if(PINC & 0X20)
				   {
					   PORTB='F';
 564:	0f 2e       	mov	r0, r31
 566:	f6 e4       	ldi	r31, 0x46	; 70
 568:	6f 2e       	mov	r6, r31
 56a:	f0 2d       	mov	r31, r0
					   lcdstring("*");
					   l++;
				   }
				   if(PINC & 0X40)
				   {
					   PORTB='G';
 56c:	0f 2e       	mov	r0, r31
 56e:	f7 e4       	ldi	r31, 0x47	; 71
 570:	5f 2e       	mov	r5, r31
 572:	f0 2d       	mov	r31, r0
					   lcdstring("*");
					   l++;
				   }
				   if(PINC & 0X80)
				   {
					   PORTB='H';
 574:	0f 2e       	mov	r0, r31
 576:	f8 e4       	ldi	r31, 0x48	; 72
 578:	3f 2e       	mov	r3, r31
 57a:	f0 2d       	mov	r31, r0
					   lcdstring("*");
					   l++;
				   }
				   
			   }
			   if (PINC=0x04)
 57c:	bb 24       	eor	r11, r11
 57e:	68 94       	set
 580:	b2 f8       	bld	r11, 2
			  cmd();
			
		   
		   while(l<=4)
		   {
			   if (PINC=0x01)
 582:	d3 ba       	out	0x13, r13	; 19
			   {
				   if(PINC & 0X10)
 584:	9c 9b       	sbis	0x13, 4	; 19
 586:	13 c0       	rjmp	.+38     	; 0x5ae <__stack+0x14f>
				   {
					   PORTB='A';
 588:	a8 ba       	out	0x18, r10	; 24
					   e1[l]=PORTB;
 58a:	88 b3       	in	r24, 0x18	; 24
 58c:	f8 01       	movw	r30, r16
 58e:	ec 0f       	add	r30, r28
 590:	fd 1f       	adc	r31, r29
 592:	80 83       	st	Z, r24
 594:	8f e9       	ldi	r24, 0x9F	; 159
 596:	96 e8       	ldi	r25, 0x86	; 134
 598:	a1 e0       	ldi	r26, 0x01	; 1
 59a:	81 50       	subi	r24, 0x01	; 1
 59c:	90 40       	sbci	r25, 0x00	; 0
 59e:	a0 40       	sbci	r26, 0x00	; 0
 5a0:	e1 f7       	brne	.-8      	; 0x59a <__stack+0x13b>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <__stack+0x145>
 5a4:	00 00       	nop
					   _delay_ms(500);
					   //to display characters as asterisks
					   lcdstring("*");
 5a6:	c7 01       	movw	r24, r14
 5a8:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 5ac:	21 96       	adiw	r28, 0x01	; 1
				   }
				   
				   if(PINC & 0X20)
 5ae:	9d 9b       	sbis	0x13, 5	; 19
 5b0:	13 c0       	rjmp	.+38     	; 0x5d8 <__stack+0x179>
				   {
					   PORTB='B';
 5b2:	98 ba       	out	0x18, r9	; 24
					   e1[l]=PORTB;
 5b4:	88 b3       	in	r24, 0x18	; 24
 5b6:	f8 01       	movw	r30, r16
 5b8:	ec 0f       	add	r30, r28
 5ba:	fd 1f       	adc	r31, r29
 5bc:	80 83       	st	Z, r24
 5be:	8f e9       	ldi	r24, 0x9F	; 159
 5c0:	96 e8       	ldi	r25, 0x86	; 134
 5c2:	a1 e0       	ldi	r26, 0x01	; 1
 5c4:	81 50       	subi	r24, 0x01	; 1
 5c6:	90 40       	sbci	r25, 0x00	; 0
 5c8:	a0 40       	sbci	r26, 0x00	; 0
 5ca:	e1 f7       	brne	.-8      	; 0x5c4 <__stack+0x165>
 5cc:	00 c0       	rjmp	.+0      	; 0x5ce <__stack+0x16f>
 5ce:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 5d0:	c7 01       	movw	r24, r14
 5d2:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 5d6:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X40)
 5d8:	9e 9b       	sbis	0x13, 6	; 19
 5da:	13 c0       	rjmp	.+38     	; 0x602 <__stack+0x1a3>
				   {
					   PORTB='C';
 5dc:	88 ba       	out	0x18, r8	; 24
					   e1[l]=PORTB;
 5de:	88 b3       	in	r24, 0x18	; 24
 5e0:	f8 01       	movw	r30, r16
 5e2:	ec 0f       	add	r30, r28
 5e4:	fd 1f       	adc	r31, r29
 5e6:	80 83       	st	Z, r24
 5e8:	8f e9       	ldi	r24, 0x9F	; 159
 5ea:	96 e8       	ldi	r25, 0x86	; 134
 5ec:	a1 e0       	ldi	r26, 0x01	; 1
 5ee:	81 50       	subi	r24, 0x01	; 1
 5f0:	90 40       	sbci	r25, 0x00	; 0
 5f2:	a0 40       	sbci	r26, 0x00	; 0
 5f4:	e1 f7       	brne	.-8      	; 0x5ee <__stack+0x18f>
 5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <__stack+0x199>
 5f8:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 5fa:	c7 01       	movw	r24, r14
 5fc:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 600:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X80)
 602:	9f 9b       	sbis	0x13, 7	; 19
 604:	13 c0       	rjmp	.+38     	; 0x62c <__stack+0x1cd>
				   {
					   PORTB='D';
 606:	48 ba       	out	0x18, r4	; 24
					   e1[l]=PORTB;
 608:	88 b3       	in	r24, 0x18	; 24
 60a:	f8 01       	movw	r30, r16
 60c:	ec 0f       	add	r30, r28
 60e:	fd 1f       	adc	r31, r29
 610:	80 83       	st	Z, r24
 612:	8f e9       	ldi	r24, 0x9F	; 159
 614:	96 e8       	ldi	r25, 0x86	; 134
 616:	a1 e0       	ldi	r26, 0x01	; 1
 618:	81 50       	subi	r24, 0x01	; 1
 61a:	90 40       	sbci	r25, 0x00	; 0
 61c:	a0 40       	sbci	r26, 0x00	; 0
 61e:	e1 f7       	brne	.-8      	; 0x618 <__stack+0x1b9>
 620:	00 c0       	rjmp	.+0      	; 0x622 <__stack+0x1c3>
 622:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 624:	c7 01       	movw	r24, r14
 626:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 62a:	21 96       	adiw	r28, 0x01	; 1
				   }
			   }
			   if (PINC=0x02)
 62c:	c3 ba       	out	0x13, r12	; 19
			   {
				   if(PINC & 0X10)
 62e:	9c 9b       	sbis	0x13, 4	; 19
 630:	13 c0       	rjmp	.+38     	; 0x658 <__stack+0x1f9>
				   {
					   PORTB='E';
 632:	78 ba       	out	0x18, r7	; 24
					   e1[l]=PORTB;
 634:	88 b3       	in	r24, 0x18	; 24
 636:	f8 01       	movw	r30, r16
 638:	ec 0f       	add	r30, r28
 63a:	fd 1f       	adc	r31, r29
 63c:	80 83       	st	Z, r24
 63e:	8f e9       	ldi	r24, 0x9F	; 159
 640:	96 e8       	ldi	r25, 0x86	; 134
 642:	a1 e0       	ldi	r26, 0x01	; 1
 644:	81 50       	subi	r24, 0x01	; 1
 646:	90 40       	sbci	r25, 0x00	; 0
 648:	a0 40       	sbci	r26, 0x00	; 0
 64a:	e1 f7       	brne	.-8      	; 0x644 <__stack+0x1e5>
 64c:	00 c0       	rjmp	.+0      	; 0x64e <__stack+0x1ef>
 64e:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 650:	c7 01       	movw	r24, r14
 652:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 656:	21 96       	adiw	r28, 0x01	; 1
				   }
				   
				   if(PINC & 0X20)
 658:	9d 9b       	sbis	0x13, 5	; 19
 65a:	13 c0       	rjmp	.+38     	; 0x682 <__stack+0x223>
				   {
					   PORTB='F';
 65c:	68 ba       	out	0x18, r6	; 24
					   e1[l]=PORTB;
 65e:	88 b3       	in	r24, 0x18	; 24
 660:	f8 01       	movw	r30, r16
 662:	ec 0f       	add	r30, r28
 664:	fd 1f       	adc	r31, r29
 666:	80 83       	st	Z, r24
 668:	8f e9       	ldi	r24, 0x9F	; 159
 66a:	96 e8       	ldi	r25, 0x86	; 134
 66c:	a1 e0       	ldi	r26, 0x01	; 1
 66e:	81 50       	subi	r24, 0x01	; 1
 670:	90 40       	sbci	r25, 0x00	; 0
 672:	a0 40       	sbci	r26, 0x00	; 0
 674:	e1 f7       	brne	.-8      	; 0x66e <__stack+0x20f>
 676:	00 c0       	rjmp	.+0      	; 0x678 <__stack+0x219>
 678:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 67a:	c7 01       	movw	r24, r14
 67c:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 680:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X40)
 682:	9e 9b       	sbis	0x13, 6	; 19
 684:	13 c0       	rjmp	.+38     	; 0x6ac <__stack+0x24d>
				   {
					   PORTB='G';
 686:	58 ba       	out	0x18, r5	; 24
					   e1[l]=PORTB;
 688:	88 b3       	in	r24, 0x18	; 24
 68a:	f8 01       	movw	r30, r16
 68c:	ec 0f       	add	r30, r28
 68e:	fd 1f       	adc	r31, r29
 690:	80 83       	st	Z, r24
 692:	8f e9       	ldi	r24, 0x9F	; 159
 694:	96 e8       	ldi	r25, 0x86	; 134
 696:	a1 e0       	ldi	r26, 0x01	; 1
 698:	81 50       	subi	r24, 0x01	; 1
 69a:	90 40       	sbci	r25, 0x00	; 0
 69c:	a0 40       	sbci	r26, 0x00	; 0
 69e:	e1 f7       	brne	.-8      	; 0x698 <__stack+0x239>
 6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <__stack+0x243>
 6a2:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 6a4:	c7 01       	movw	r24, r14
 6a6:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 6aa:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X80)
 6ac:	9f 9b       	sbis	0x13, 7	; 19
 6ae:	13 c0       	rjmp	.+38     	; 0x6d6 <__stack+0x277>
				   {
					   PORTB='H';
 6b0:	38 ba       	out	0x18, r3	; 24
					   e1[l]=PORTB;
 6b2:	88 b3       	in	r24, 0x18	; 24
 6b4:	f8 01       	movw	r30, r16
 6b6:	ec 0f       	add	r30, r28
 6b8:	fd 1f       	adc	r31, r29
 6ba:	80 83       	st	Z, r24
 6bc:	8f e9       	ldi	r24, 0x9F	; 159
 6be:	96 e8       	ldi	r25, 0x86	; 134
 6c0:	a1 e0       	ldi	r26, 0x01	; 1
 6c2:	81 50       	subi	r24, 0x01	; 1
 6c4:	90 40       	sbci	r25, 0x00	; 0
 6c6:	a0 40       	sbci	r26, 0x00	; 0
 6c8:	e1 f7       	brne	.-8      	; 0x6c2 <__stack+0x263>
 6ca:	00 c0       	rjmp	.+0      	; 0x6cc <__stack+0x26d>
 6cc:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 6ce:	c7 01       	movw	r24, r14
 6d0:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 6d4:	21 96       	adiw	r28, 0x01	; 1
				   }
				   
			   }
			   if (PINC=0x04)
 6d6:	b3 ba       	out	0x13, r11	; 19
			   {
				   if(PINC & 0X10)
 6d8:	9c 9b       	sbis	0x13, 4	; 19
 6da:	14 c0       	rjmp	.+40     	; 0x704 <__stack+0x2a5>
				   {
					   PORTB='I';
 6dc:	89 e4       	ldi	r24, 0x49	; 73
 6de:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 6e0:	88 b3       	in	r24, 0x18	; 24
 6e2:	f8 01       	movw	r30, r16
 6e4:	ec 0f       	add	r30, r28
 6e6:	fd 1f       	adc	r31, r29
 6e8:	80 83       	st	Z, r24
 6ea:	8f e9       	ldi	r24, 0x9F	; 159
 6ec:	96 e8       	ldi	r25, 0x86	; 134
 6ee:	a1 e0       	ldi	r26, 0x01	; 1
 6f0:	81 50       	subi	r24, 0x01	; 1
 6f2:	90 40       	sbci	r25, 0x00	; 0
 6f4:	a0 40       	sbci	r26, 0x00	; 0
 6f6:	e1 f7       	brne	.-8      	; 0x6f0 <__stack+0x291>
 6f8:	00 c0       	rjmp	.+0      	; 0x6fa <__stack+0x29b>
 6fa:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 6fc:	c7 01       	movw	r24, r14
 6fe:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 702:	21 96       	adiw	r28, 0x01	; 1
				   }
				   
				   if(PINC & 0X20)
 704:	9d 9b       	sbis	0x13, 5	; 19
 706:	14 c0       	rjmp	.+40     	; 0x730 <__stack+0x2d1>
				   {
					   PORTB='J';
 708:	8a e4       	ldi	r24, 0x4A	; 74
 70a:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 70c:	88 b3       	in	r24, 0x18	; 24
 70e:	f8 01       	movw	r30, r16
 710:	ec 0f       	add	r30, r28
 712:	fd 1f       	adc	r31, r29
 714:	80 83       	st	Z, r24
 716:	8f e9       	ldi	r24, 0x9F	; 159
 718:	96 e8       	ldi	r25, 0x86	; 134
 71a:	a1 e0       	ldi	r26, 0x01	; 1
 71c:	81 50       	subi	r24, 0x01	; 1
 71e:	90 40       	sbci	r25, 0x00	; 0
 720:	a0 40       	sbci	r26, 0x00	; 0
 722:	e1 f7       	brne	.-8      	; 0x71c <__stack+0x2bd>
 724:	00 c0       	rjmp	.+0      	; 0x726 <__stack+0x2c7>
 726:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 728:	c7 01       	movw	r24, r14
 72a:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 72e:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X40)
 730:	9e 9b       	sbis	0x13, 6	; 19
 732:	14 c0       	rjmp	.+40     	; 0x75c <__stack+0x2fd>
				   {
					   PORTB='K';
 734:	8b e4       	ldi	r24, 0x4B	; 75
 736:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 738:	88 b3       	in	r24, 0x18	; 24
 73a:	f8 01       	movw	r30, r16
 73c:	ec 0f       	add	r30, r28
 73e:	fd 1f       	adc	r31, r29
 740:	80 83       	st	Z, r24
 742:	8f e9       	ldi	r24, 0x9F	; 159
 744:	96 e8       	ldi	r25, 0x86	; 134
 746:	a1 e0       	ldi	r26, 0x01	; 1
 748:	81 50       	subi	r24, 0x01	; 1
 74a:	90 40       	sbci	r25, 0x00	; 0
 74c:	a0 40       	sbci	r26, 0x00	; 0
 74e:	e1 f7       	brne	.-8      	; 0x748 <__stack+0x2e9>
 750:	00 c0       	rjmp	.+0      	; 0x752 <__stack+0x2f3>
 752:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 754:	c7 01       	movw	r24, r14
 756:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 75a:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X80)
 75c:	9f 9b       	sbis	0x13, 7	; 19
 75e:	14 c0       	rjmp	.+40     	; 0x788 <__stack+0x329>
				   {
					   PORTB='L';
 760:	8c e4       	ldi	r24, 0x4C	; 76
 762:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 764:	88 b3       	in	r24, 0x18	; 24
 766:	f8 01       	movw	r30, r16
 768:	ec 0f       	add	r30, r28
 76a:	fd 1f       	adc	r31, r29
 76c:	80 83       	st	Z, r24
 76e:	8f e9       	ldi	r24, 0x9F	; 159
 770:	96 e8       	ldi	r25, 0x86	; 134
 772:	a1 e0       	ldi	r26, 0x01	; 1
 774:	81 50       	subi	r24, 0x01	; 1
 776:	90 40       	sbci	r25, 0x00	; 0
 778:	a0 40       	sbci	r26, 0x00	; 0
 77a:	e1 f7       	brne	.-8      	; 0x774 <__stack+0x315>
 77c:	00 c0       	rjmp	.+0      	; 0x77e <__stack+0x31f>
 77e:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 780:	c7 01       	movw	r24, r14
 782:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 786:	21 96       	adiw	r28, 0x01	; 1
				   }
			   }
			   if (PINC=0x08)
 788:	88 e0       	ldi	r24, 0x08	; 8
 78a:	83 bb       	out	0x13, r24	; 19
			   {
				   if(PINC & 0X10)
 78c:	9c 9b       	sbis	0x13, 4	; 19
 78e:	14 c0       	rjmp	.+40     	; 0x7b8 <__stack+0x359>
				   {
					   PORTB='M';
 790:	8d e4       	ldi	r24, 0x4D	; 77
 792:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 794:	88 b3       	in	r24, 0x18	; 24
 796:	f8 01       	movw	r30, r16
 798:	ec 0f       	add	r30, r28
 79a:	fd 1f       	adc	r31, r29
 79c:	80 83       	st	Z, r24
 79e:	8f e9       	ldi	r24, 0x9F	; 159
 7a0:	96 e8       	ldi	r25, 0x86	; 134
 7a2:	a1 e0       	ldi	r26, 0x01	; 1
 7a4:	81 50       	subi	r24, 0x01	; 1
 7a6:	90 40       	sbci	r25, 0x00	; 0
 7a8:	a0 40       	sbci	r26, 0x00	; 0
 7aa:	e1 f7       	brne	.-8      	; 0x7a4 <__stack+0x345>
 7ac:	00 c0       	rjmp	.+0      	; 0x7ae <__stack+0x34f>
 7ae:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 7b0:	c7 01       	movw	r24, r14
 7b2:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 7b6:	21 96       	adiw	r28, 0x01	; 1
				   }
				   
				   if(PINC & 0X20)
 7b8:	9d 9b       	sbis	0x13, 5	; 19
 7ba:	14 c0       	rjmp	.+40     	; 0x7e4 <__stack+0x385>
				   {
					   PORTB='N';
 7bc:	8e e4       	ldi	r24, 0x4E	; 78
 7be:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 7c0:	88 b3       	in	r24, 0x18	; 24
 7c2:	f8 01       	movw	r30, r16
 7c4:	ec 0f       	add	r30, r28
 7c6:	fd 1f       	adc	r31, r29
 7c8:	80 83       	st	Z, r24
 7ca:	8f e9       	ldi	r24, 0x9F	; 159
 7cc:	96 e8       	ldi	r25, 0x86	; 134
 7ce:	a1 e0       	ldi	r26, 0x01	; 1
 7d0:	81 50       	subi	r24, 0x01	; 1
 7d2:	90 40       	sbci	r25, 0x00	; 0
 7d4:	a0 40       	sbci	r26, 0x00	; 0
 7d6:	e1 f7       	brne	.-8      	; 0x7d0 <__stack+0x371>
 7d8:	00 c0       	rjmp	.+0      	; 0x7da <__stack+0x37b>
 7da:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 7dc:	c7 01       	movw	r24, r14
 7de:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 7e2:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X40)
 7e4:	9e 9b       	sbis	0x13, 6	; 19
 7e6:	14 c0       	rjmp	.+40     	; 0x810 <__stack+0x3b1>
				   {
					   PORTB='O';
 7e8:	8f e4       	ldi	r24, 0x4F	; 79
 7ea:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 7ec:	88 b3       	in	r24, 0x18	; 24
 7ee:	f8 01       	movw	r30, r16
 7f0:	ec 0f       	add	r30, r28
 7f2:	fd 1f       	adc	r31, r29
 7f4:	80 83       	st	Z, r24
 7f6:	8f e9       	ldi	r24, 0x9F	; 159
 7f8:	96 e8       	ldi	r25, 0x86	; 134
 7fa:	a1 e0       	ldi	r26, 0x01	; 1
 7fc:	81 50       	subi	r24, 0x01	; 1
 7fe:	90 40       	sbci	r25, 0x00	; 0
 800:	a0 40       	sbci	r26, 0x00	; 0
 802:	e1 f7       	brne	.-8      	; 0x7fc <__stack+0x39d>
 804:	00 c0       	rjmp	.+0      	; 0x806 <__stack+0x3a7>
 806:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 808:	c7 01       	movw	r24, r14
 80a:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 80e:	21 96       	adiw	r28, 0x01	; 1
				   }
				   if(PINC & 0X80)
 810:	9f 9b       	sbis	0x13, 7	; 19
 812:	14 c0       	rjmp	.+40     	; 0x83c <__stack+0x3dd>
				   {
					   PORTB='P';
 814:	80 e5       	ldi	r24, 0x50	; 80
 816:	88 bb       	out	0x18, r24	; 24
					   e1[l]=PORTB;
 818:	88 b3       	in	r24, 0x18	; 24
 81a:	f8 01       	movw	r30, r16
 81c:	ec 0f       	add	r30, r28
 81e:	fd 1f       	adc	r31, r29
 820:	80 83       	st	Z, r24
 822:	8f e9       	ldi	r24, 0x9F	; 159
 824:	96 e8       	ldi	r25, 0x86	; 134
 826:	a1 e0       	ldi	r26, 0x01	; 1
 828:	81 50       	subi	r24, 0x01	; 1
 82a:	90 40       	sbci	r25, 0x00	; 0
 82c:	a0 40       	sbci	r26, 0x00	; 0
 82e:	e1 f7       	brne	.-8      	; 0x828 <__stack+0x3c9>
 830:	00 c0       	rjmp	.+0      	; 0x832 <__stack+0x3d3>
 832:	00 00       	nop
					   _delay_ms(500);
					   lcdstring("*");
 834:	c7 01       	movw	r24, r14
 836:	0e 94 57 00 	call	0xae	; 0xae <lcdstring>
					   l++;
 83a:	21 96       	adiw	r28, 0x01	; 1
					   
				   }
				   e1[l]='\0';
 83c:	f8 01       	movw	r30, r16
 83e:	ec 0f       	add	r30, r28
 840:	fd 1f       	adc	r31, r29
 842:	10 82       	st	Z, r1
		    }
			  PORTB=0xc0;
			  cmd();
			
		   
		   while(l<=4)
 844:	c5 30       	cpi	r28, 0x05	; 5
 846:	d1 05       	cpc	r29, r1
 848:	0c f4       	brge	.+2      	; 0x84c <__stack+0x3ed>
 84a:	9b ce       	rjmp	.-714    	; 0x582 <__stack+0x123>
				   }
				   e1[l]='\0';
			   }
		   }
		   
		  PORTB=0x01;
 84c:	81 e0       	ldi	r24, 0x01	; 1
 84e:	88 bb       	out	0x18, r24	; 24
		  cmd();
 850:	0e 94 67 00 	call	0xce	; 0xce <cmd>
		   PORTB=0x80;
 854:	80 e8       	ldi	r24, 0x80	; 128
 856:	88 bb       	out	0x18, r24	; 24
		   cmd();
 858:	0e 94 67 00 	call	0xce	; 0xce <cmd>
		   
		   //to verify whether the password entered matches the inbuilt password 
		   	if(((strncmp(e,e1,5))==0))
 85c:	80 ec       	ldi	r24, 0xC0	; 192
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	66 ec       	ldi	r22, 0xC6	; 198
 862:	70 e0       	ldi	r23, 0x00	; 0
 864:	45 e0       	ldi	r20, 0x05	; 5
 866:	50 e0       	ldi	r21, 0x00	; 0
 868:	0e 94 68 04 	call	0x8d0	; 0x8d0 <strncmp>
 86c:	28 2f       	mov	r18, r24
 86e:	39 2f       	mov	r19, r25
 870:	21 15       	cp	r18, r1
 872:	31 05       	cpc	r19, r1
 874:	69 f4       	brne	.+26     	; 0x890 <__stack+0x431>
 876:	cb e7       	ldi	r28, 0x7B	; 123
 878:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 87a:	8e 01       	movw	r16, r28
 87c:	05 5f       	subi	r16, 0xF5	; 245
 87e:	1f 4f       	sbci	r17, 0xFF	; 255
		   //to verify whether the password entered matches the inbuilt password 
		   	if(((strncmp(e,e1,5))==0))
		   	{
			   	 for(i=0;i<=10;i++)
			   	 {
				   	 PORTB=arr6[i];
 880:	89 91       	ld	r24, Y+
 882:	88 bb       	out	0x18, r24	; 24
				   	 display();
 884:	0e 94 49 00 	call	0x92	; 0x92 <display>
		   cmd();
		   
		   //to verify whether the password entered matches the inbuilt password 
		   	if(((strncmp(e,e1,5))==0))
		   	{
			   	 for(i=0;i<=10;i++)
 888:	c0 17       	cp	r28, r16
 88a:	d1 07       	cpc	r29, r17
 88c:	c9 f7       	brne	.-14     	; 0x880 <__stack+0x421>
 88e:	0c c0       	rjmp	.+24     	; 0x8a8 <__stack+0x449>
 890:	c1 e7       	ldi	r28, 0x71	; 113
 892:	d0 e0       	ldi	r29, 0x00	; 0
unsigned char arr8[]={"enter password"};	
		//array to store password
	unsigned char e[6];
	unsigned char e1[6];
	
int main(void)
 894:	8e 01       	movw	r16, r28
 896:	07 5f       	subi	r16, 0xF7	; 247
 898:	1f 4f       	sbci	r17, 0xFF	; 255
			   }
			   else
			   {					
			   	for(i=0;i<=8;i++)
			   	{
				   	PORTB=arr7[i];
 89a:	89 91       	ld	r24, Y+
 89c:	88 bb       	out	0x18, r24	; 24
				   	display();
 89e:	0e 94 49 00 	call	0x92	; 0x92 <display>
				   	 display();
			   	 }
			   }
			   else
			   {					
			   	for(i=0;i<=8;i++)
 8a2:	c0 17       	cp	r28, r16
 8a4:	d1 07       	cpc	r29, r17
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__stack+0x43b>
			   	{
				   	PORTB=arr7[i];
				   	display();
			   	}
			   }
 8a8:	80 e0       	ldi	r24, 0x00	; 0
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	df 91       	pop	r29
 8ae:	cf 91       	pop	r28
 8b0:	1f 91       	pop	r17
 8b2:	0f 91       	pop	r16
 8b4:	ff 90       	pop	r15
 8b6:	ef 90       	pop	r14
 8b8:	df 90       	pop	r13
 8ba:	cf 90       	pop	r12
 8bc:	bf 90       	pop	r11
 8be:	af 90       	pop	r10
 8c0:	9f 90       	pop	r9
 8c2:	8f 90       	pop	r8
 8c4:	7f 90       	pop	r7
 8c6:	6f 90       	pop	r6
 8c8:	5f 90       	pop	r5
 8ca:	4f 90       	pop	r4
 8cc:	3f 90       	pop	r3
 8ce:	08 95       	ret

000008d0 <strncmp>:
 8d0:	fb 01       	movw	r30, r22
 8d2:	dc 01       	movw	r26, r24
 8d4:	41 50       	subi	r20, 0x01	; 1
 8d6:	50 40       	sbci	r21, 0x00	; 0
 8d8:	30 f0       	brcs	.+12     	; 0x8e6 <strncmp+0x16>
 8da:	8d 91       	ld	r24, X+
 8dc:	01 90       	ld	r0, Z+
 8de:	80 19       	sub	r24, r0
 8e0:	19 f4       	brne	.+6      	; 0x8e8 <strncmp+0x18>
 8e2:	00 20       	and	r0, r0
 8e4:	b9 f7       	brne	.-18     	; 0x8d4 <strncmp+0x4>
 8e6:	88 1b       	sub	r24, r24
 8e8:	99 0b       	sbc	r25, r25
 8ea:	08 95       	ret

000008ec <_exit>:
 8ec:	f8 94       	cli

000008ee <__stop_program>:
 8ee:	ff cf       	rjmp	.-2      	; 0x8ee <__stop_program>
